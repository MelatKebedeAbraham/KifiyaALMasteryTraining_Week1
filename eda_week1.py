# -*- coding: utf-8 -*-
"""EDA - Week1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YOSx18evN7qQQ1qDMWS3gyN6pXwLg9wu
"""

import pandas as pd
df = pd.read_csv('raw_analyst_ratings.csv')
df['headline_length'] = df['headline'].apply(len)
print(df['headline_length'].describe())

publisher_counts = df['publisher'].value_counts()
print(publisher_counts)

df['date'] = pd.to_datetime(df['date'])
df['date'].dt.date.value_counts().sort_index().plot()

from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer
analyzer = SentimentIntensityAnalyzer()
df['sentiment_score'] = df['headline'].apply(lambda x: analyzer.polarity_scores(x)['compound'])

from sklearn.feature_extraction.text import CountVectorizer
from sklearn.decomposition import LatentDirichletAllocation

vectorizer = CountVectorizer(stop_words='english')
X = vectorizer.fit_transform(df['headline'])
lda = LatentDirichletAllocation(n_components=5, random_state=42)
lda.fit(X)

df['publication_day'] = df['date'].dt.day_name()
publication_trends = df['publication_day'].value_counts()
print(publication_trends)

df['domain'] = df['publisher'].apply(lambda x: x.split('@')[-1] if '@' in x else x)
domain_counts = df['domain'].value_counts()
print(domain_counts)